@model PaginatedList<ITAssetRepo.Models.Asset_list>

@{
    ViewData["Title"] = "Asset List";

    // Number of page links to display before and after the current page
    int maxPageLinks = 3;
    int startPage = Math.Max(1, Model.PageIndex - maxPageLinks / 2);
    int endPage = Math.Min(Model.TotalPages, startPage + maxPageLinks - 1);

    // Adjust the start page if there are not enough pages before the endPage
    if (endPage - startPage < maxPageLinks - 1)
    {
        startPage = Math.Max(1, endPage - maxPageLinks + 1);
    }
}

<h3 class="text-center">Asset List</h3>

<nav class="navbar">
    <div class="container-fluid">
        <div class="d-grid gap-2 d-md-block">
            <!-- Create New Asset Button -->
            <a class="btn btn-primary" asp-action="Create">Create New</a>
            <!-- Upload Excel File Button -->
            <a class="btn btn-primary" href="/Asset_list/UploadExcel" role="button">Upload File</a>
            <!-- Back Button -->
            <a class="btn btn-danger" href="/Home/" role="button">Back</a>
        </div>

        <!-- Asset Search Form -->
        <form method="get" asp-action="Index" class="row g-3">
            <div class="col-auto">
                <input class="form-control" type="text" placeholder="Search for..." name="SearchString"
                       value="@ViewData["CurrentFilter"]" aria-label="Search" />
            </div>
            <div class="col-auto">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
            <div class="col-auto">
                <a class="btn btn-secondary" href="/Asset_list/Index" role="button">Clear</a>
            </div>
        </form>
    </div>
</nav>

<!-- Asset List Table -->
<table class="table table-hover table-striped">
    <thead>
        <tr>
            <!-- Table Headers -->
            <th scope="col">Asset Number</th>
            <th scope="col">Description</th>
            <th scope="col">Category</th>
            <th scope="col">Acquisition Date</th>
            <th scope="col">Location</th>
            <th scope="col">Label</th>
            <th scope="col">Custodian</th>
            <th scope="col">Condition</th>
            <th scope="col">PO Number</th>
            <th scope="col">Model</th>
            <th scope="col">Serial Number</th>
            <th scope="col">Cost</th>
            <th>Operations</th>
        </tr>
    </thead>
    <tbody>
        <!-- Iterate over each item in the Model -->
        @foreach (var item in Model)
        {
            <tr>
                <!-- Display Asset Details -->
                <td>@item.Asset_Number</td>
                <td>@item.Description</td>
                <td>@item.Catergory</td>
                <td>@item.Acq_Date.ToShortDateString()</td> <!-- Format Date -->
                <td>@item.Location</td>
                <td>@item.Label</td>
                <td>@item.Custodian</td>
                <td>@item.Condition</td>
                <td>@item.PO_Number</td>
                <td>@item.Model</td>
                <td>@item.Serial_Number</td>
                <td>@item.Asset_Cost.ToString("C")</td> <!-- Format Cost as Currency -->
                <td class="d-grid gap-2">
                    <!-- Edit Button -->
                    <a class="btn btn-dark" asp-action="Edit" asp-route-id="@item.Asset_Number">Edit</a>
                    <!-- Details Button -->
                    <a class="btn btn-success" asp-action="Details" asp-route-id="@item.Asset_Number">Details</a>
                    <!-- Delete Button with Confirmation -->
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Asset_Number"
                       onclick="return confirm('Are you sure you want to delete this Asset?')">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<div class="row">
    <div class="col-md-6"></div>
    <div class="col-md-6">
        <nav>
            <ul class="pagination justify-content-end">
                <!-- First Page Button -->
                <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                    <a class="page-link text-black" asp-route-pageNumber="1" asp-route-currentFilter="@ViewData["CurrentFilter"]">First</a>
                </li>

                <!-- Previous Page Button -->
                <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                    <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]">Previous</a>
                </li>

                <!-- Page Numbers -->
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                        <a class="page-link text-black" asp-route-pageNumber="@i" asp-route-currentFilter="@ViewData["CurrentFilter"]">@i</a>
                    </li>
                }

                <!-- Next Page Button -->
                <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                    <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]">Next</a>
                </li>

                <!-- Last Page Button -->
                <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link text-black" asp-route-pageNumber="@Model.TotalPages" asp-route-currentFilter="@ViewData["CurrentFilter"]">Last</a>
                </li>
            </ul>
        </nav>
    </div>
</div>
