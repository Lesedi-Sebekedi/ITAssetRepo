@model PaginatedList<ITAssetRepo.Models.Asset>


@{
    ViewData["Title"] = "Asset List";
}
<h3 class="text-center">Asset List</h3>

<nav class="navbar">
    <div class="container-fluid">
        <div class="d-grid gap-2 d-md-block">
            <a class="btn btn-primary" asp-action="Create">Create New</a>
            <a class="btn btn-primary" href="/Asset_list/UploadExcel" role="button">Upload File</a>
            <a class="btn btn-danger" href="/Home/" role="button">Back</a>
        </div>

        <!-- Asset search field and button -->
        <form method="get" asp-action="Index" class="row g-3">
            <div class="col-auto">
                <input class="form-control" type="text" placeholder="Search for..." name="SearchString" value="@ViewData["CurrentFilter"]"
                       aria-label="Search" aria-describedby="btnNavbarSearch" />
            </div>
            <div class="col-auto">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
            <div class="col-auto">
                <a class="btn btn-secondary" href="/Asset_list/Index" role="button">Clear</a>
            </div>
        </form>
    </div>
</nav>

<table class="table table-hover table-striped">
    <thead>
        <tr>
            <th scope="col">Asset Number</th>
            <th scope="col">Description</th>
            <th scope="col">Category</th>
            <th scope="col">Acq Date</th>
            <th scope="col">Location</th>
            <th scope="col">Label</th>
            <th scope="col">Custodian</th>
            <th scope="col">Condition</th>
            <th scope="col">Model</th>
            <th scope="col">Serial Number</th>
            <th scope="col">Written Off</th>
            <th>Operation</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Asset_Number</td>
                <td>@item.Description</td>
                <td>@item.Catergory</td>
                <td>@item.Acq_Date</td>
                <td>@item.Location</td>
                <td>@item.Label</td>
                <td>@item.Custodian</td>
                <td>@item.Condition</td>
                <td>@item.Model</td>
                <td>@item.Serial_Number</td>
                <td>
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
                        <label class="form-check-label" for="flexSwitchCheckDefault">No/Yes</label>
                    </div>
                </td>
                <td>
                    <div class="btn-group" role="group">
                        <a class="btn btn-dark btn-sm" asp-action="Edit" asp-route-id="@item.Asset_Number">Edit</a>
                        <a class="btn btn-success btn-sm" asp-action="Details" asp-route-id="@item.Asset_Number">Details</a>
                        <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Asset_Number"
                           onclick="return confirm('Are you sure you want to delete this Asset')">Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<<!-- Pagination buttons -->
<div class="row">
    <div class="col-md-6"></div>
    <div class="col-md-6">
        <nav>
            <ul class="pagination justify-content-end">
                <!-- First Page Link -->
                <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                    <a class="page-link text-black" asp-route-pageNumber="1"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        <span>First</span>
                    </a>
                </li>

                <!-- Previous Page Link -->
                <li class="page-item @(Model.PageIndex == 1 ? "disabled" : "")">
                    <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        <span>Previous</span>
                    </a>
                </li>

                <!-- Page Number Links -->
                @if (Model.TotalPages > 1)
                {
                    var startPage = Math.Max(1, Model.PageIndex - 2);
                    var endPage = Math.Min(Model.TotalPages, Model.PageIndex + 2);

                    if (startPage > 1)
                    {
                        <li class="page-item">
                            <span class="page-link text-black">...</span>
                        </li>
                    }

                    @for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(Model.PageIndex == i ? "active" : "")">
                            <a class="page-link text-black" asp-route-pageNumber="@i"
                               asp-route-currentFilter="@ViewData["CurrentFilter"]">@i</a>
                        </li>
                    }

                    if (endPage < Model.TotalPages)
                    {
                        <li class="page-item">
                            <span class="page-link text-black">...</span>
                        </li>
                    }
                }

                <!-- Next Page Link -->
                <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link text-black" asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        <span>Next</span>
                    </a>
                </li>

                <!-- Last Page Link -->
                <li class="page-item @(Model.PageIndex == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link text-black" asp-route-pageNumber="@Model.TotalPages"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        <span>Last</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

